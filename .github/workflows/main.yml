name: Circle CI
on:
  pull_request: {}
  push: { branches: [master, release] }

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE_DECRYPT_KEY }}
  UNITY_VERSION: 2019.4.17f1
  PROJECT_PATH: /

jobs:
  activation:
    name: Request manual activation file ðŸ”‘
    runs-on: ubuntu-latest
    steps:
    # Request manual activation file
    - name: Request manual activation file
      id: getManualLicenseFile
      uses: webbertakken/unity-request-manual-activation-file@v1.1
      with:
        unityVersion: ${{ env.UNITY_VERSION }}
    # Upload artifact (Unity_v2019.4.17f.alf)
    - name: Expose as artifact
      uses: actions/upload-artifact@v1
      with:
        name: ${{ steps.getManualLicenseFile.outputs.filePath }}
        path: ${{ steps.getManualLicenseFile.outputs.filePath }}
    # Activate
    - name: Unity - Activate
      uses: game-ci/unity-activate@v1.3

  
  test:
    needs: [activation]
#   if: needs.checklicense.outputs.is_unity_license_set == 'true'
    name: Run EditMode and PlayMode Tests
    runs-on: ubuntu-latest
    steps:
      # Checkout repo
      - uses: actions/checkout@v2
        with:
          lfs: true

      # Cache
      - uses: actions/cache@v1.1.0
        with:
          path: test-project/Library
          key: Library-test-project-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-UniversalControl
            Library
      - uses: game-ci/unity-test-runner@v2.0-alpha-2
        id: testRunner
        with:
          projectPath: ${{ env.PROJECT_PATH }}
          unityVersion: ${{ env.UNITY_VERSION }}
          testMode: all
          customParameters: "-nographics"

      - uses: actions/upload-artifact@v1
        with:
          name: Test Results (All modes)
          path: ${{ steps.testRunner.outputs.artifactsPath }}

  linter:
    needs: [test]
    name: Lint code base
    runs-on: ubuntu-latest
    steps:
      # Checkout repo
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Perform Linting
      - name: Perform Linting
        uses: github/super-linter@v3
        env:
          VALIDATE_ALL_CODEBASE: false
          VALIDATE_CSHARP: true
          DEFAULT_BRANCH: master
          GITHUB_TOKEN: ${{ secrets.LINT_TOKEN }}
